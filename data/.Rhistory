library(dplyr)
library(tidyr)
library(rmarkdown)
library(ggplot2)
old_data <- read.csv("usa.csv")
paged_table(old_data) # thay thế cho print, in ra bảng đẹp hơn
new_data <- old_data %>% select(3:14)
paged_table(new_data)
main_data <- subset(new_data , select = c(new_deaths , new_cases , new_tests , icu_patients , hosp_patients , people_fully_vaccinated , positive_rate))
# paged_table(main_data)
main_data %>% sapply(function(col) sum(is.na(col)))    #Số dữ liệu bị khuyết theo cột
apply(main_data, 2, function(x)sum(is.na(x))/length(x))    #Tỉ lệ dữ liệu bị khuyết
main_data <- na.omit(main_data)
# main_data[is.na(main_data)] <- 0    #NA <- 0
paged_table(main_data)
stat_table<-apply(main_data[,c("new_deaths", "new_cases", "new_tests", "icu_patients", "hosp_patients", "people_fully_vaccinated", "positive_rate")], 2,
function(x){c(mean(x), median(x), sd(x), min(x), max(x))})
rownames(stat_table)<-c("mean", "median", "sd", "min", "max")
paged_table(as.data.frame(stat_table))
plot_hist_norm <- function(data, var) {
# Calculate the variable to plot
plot_var <- data[[var]]
# Histogram of the variable
hist(plot_var, main = paste0("Histogram and Normal Curve of '", var, "'"),
col = "blue", border = "white", xlab = "Cases", breaks = 20, freq = FALSE)
# Normal curve overlay
curve(dnorm(x, mean = mean(plot_var), sd = sd(plot_var)),
col = "red", lwd = 2, add = TRUE)
}
for (col_name in colnames(main_data)) {
# Call plot_hist_norm on each column
plot_hist_norm(main_data, col_name)
}
plot_hist_norm_log <- function(data, var) {
# Calculate the variable to plot
plot_var <- log(data[[var]])
# Histogram of the variable
hist(plot_var, main = paste0("Histogram and Normal Curve of log(", var, ")"),
col = "blue", border = "white", xlab = "Cases", breaks = 20, freq = FALSE)
# Normal curve overlay
curve(dnorm(x, mean = mean(plot_var), sd = sd(plot_var)),
col = "red", lwd = 2, add = TRUE)
}
for (col_name in colnames(main_data)) {
# Call plot_hist_norm on each column
plot_hist_norm_log(main_data, col_name)
}
model <- lm(new_deaths ~ new_cases + new_tests + hosp_patients + positive_rate,
data = main_data)
summary(model)
# In ra cac he so cua mo hinh
paged_table(as.data.frame(t(model$coefficients)))
library(dplyr)
library(tidyr)
library(rmarkdown)
library(ggplot2)
old_data <- read.csv("usa.csv")
paged_table(old_data) # thay thế cho print, in ra bảng đẹp hơn
new_data <- old_data %>% select(3:14)
paged_table(new_data)
main_data <- subset(new_data , select = c(new_deaths , new_cases , new_tests, hosp_patients , positive_rate))
# paged_table(main_data)
main_data %>% sapply(function(col) sum(is.na(col)))    #Số dữ liệu bị khuyết theo cột
apply(main_data, 2, function(x)sum(is.na(x))/length(x))    #Tỉ lệ dữ liệu bị khuyết
main_data <- na.omit(main_data)
# main_data[is.na(main_data)] <- 0    #NA <- 0
paged_table(main_data)
stat_table<-apply(main_data[,c("new_deaths", "new_cases", "new_tests", "hosp_patients", "positive_rate")], 2,
function(x){c(mean(x), median(x), sd(x), min(x), max(x))})
rownames(stat_table)<-c("mean", "median", "sd", "min", "max")
paged_table(as.data.frame(stat_table))
plot_hist_norm <- function(data, var) {
# Calculate the variable to plot
plot_var <- data[[var]]
par(mfrow = c(1, 2))
# Histogram of the variable
# Normal curve overlay
hist(plot_var, main = paste0(var), xlab = "x",
col = "blue", border = "white", breaks = 20, freq = FALSE)
hist(log(plot_var), main = paste0("Log(", var, ")"), xlab = "ln(x)",
col = "blue", border = "white", breaks = 20, freq = FALSE)
curve(dnorm(x, mean = mean(log(plot_var)), sd = sd(log(plot_var))),
col = "red", lwd = 2, add = TRUE)
}
for (col_name in colnames(main_data)) {
# Call plot_hist_norm on each column
plot_hist_norm(main_data, col_name)
}
# Apply log data transformation to all variables
for (col_name in colnames(main_data)) {
main_data[[col_name]] <- log(main_data[[col_name]])
}
stat_table<-apply(main_data[,c("new_deaths", "new_cases", "new_tests", "hosp_patients", "positive_rate")], 2,
function(x){c(mean(x), median(x), sd(x), min(x), max(x))})
rownames(stat_table)<-c("mean", "median", "sd", "min", "max")
paged_table(as.data.frame(stat_table))
paged_table(as.data.frame(cor(main_data)))
contTab = subset(main_data, select = colnames(main_data))
pairs(contTab)
model <- lm(new_deaths ~ new_cases + new_tests + hosp_patients + positive_rate,
data = main_data)
summary(model)
# In ra cac he so cua mo hinh
paged_table(as.data.frame(t(model$coefficients)))
SSE <- (model$residuals ^ 2) %>% sum()
SSR <- ((model$fitted.values - mean(main_data$new_deaths)) ^ 2) %>% sum()
SST <- ((main_data$new_deaths - mean(main_data$new_deaths)) ^ 2) %>% sum()
table <- data.frame(SSE, SSR, SST)
# Print the table
paged_table(table)
error_sd <- sqrt(SSE / (nrow(main_data) - 5))
print(error_sd)
library(dplyr)
library(tidyr)
library(rmarkdown)
library(ggplot2)
old_data <- read.csv("usa.csv")
paged_table(old_data) # thay thế cho print, in ra bảng đẹp hơn
new_data <- old_data %>% select(3:14)
paged_table(new_data)
main_data <- subset(new_data , select = c(new_deaths , new_cases , new_tests, hosp_patients , positive_rate))
# paged_table(main_data)
main_data %>% sapply(function(col) sum(is.na(col)))    #Số dữ liệu bị khuyết theo cột
apply(main_data, 2, function(x)sum(is.na(x))/length(x))    #Tỉ lệ dữ liệu bị khuyết
main_data <- na.omit(main_data)
# main_data[is.na(main_data)] <- 0    #NA <- 0
paged_table(main_data)
stat_table<-apply(main_data[,c("new_deaths", "new_cases", "new_tests", "hosp_patients", "positive_rate")], 2,
function(x){c(mean(x), median(x), sd(x), min(x), max(x))})
rownames(stat_table)<-c("mean", "median", "sd", "min", "max")
paged_table(as.data.frame(stat_table))
plot_hist_norm <- function(data, var) {
# Calculate the variable to plot
plot_var <- data[[var]]
par(mfrow = c(1, 2))
# Histogram of the variable
# Normal curve overlay
hist(plot_var, main = paste0(var), xlab = "x",
col = "blue", border = "white", breaks = 20, freq = FALSE)
hist(log(plot_var), main = paste0("Log(", var, ")"), xlab = "ln(x)",
col = "blue", border = "white", breaks = 20, freq = FALSE)
curve(dnorm(x, mean = mean(log(plot_var)), sd = sd(log(plot_var))),
col = "red", lwd = 2, add = TRUE)
}
for (col_name in colnames(main_data)) {
# Call plot_hist_norm on each column
plot_hist_norm(main_data, col_name)
}
# Apply log data transformation to all variables
for (col_name in colnames(main_data)) {
main_data[[col_name]] <- log(main_data[[col_name]])
}
stat_table<-apply(main_data[,c("new_deaths", "new_cases", "new_tests", "hosp_patients", "positive_rate")], 2,
function(x){c(mean(x), median(x), sd(x), min(x), max(x))})
rownames(stat_table)<-c("mean", "median", "sd", "min", "max")
paged_table(as.data.frame(stat_table))
paged_table(as.data.frame(cor(main_data)))
contTab = subset(main_data, select = colnames(main_data))
pairs(contTab)
model <- lm(new_deaths ~ new_cases + new_tests + hosp_patients + positive_rate,
data = main_data)
summary(model)
# In ra cac he so cua mo hinh
paged_table(as.data.frame(t(model$coefficients)))
SSE <- (model$residuals ^ 2) %>% sum()
SSR <- ((model$fitted.values - mean(main_data$new_deaths)) ^ 2) %>% sum()
SST <- ((main_data$new_deaths - mean(main_data$new_deaths)) ^ 2) %>% sum()
table <- data.frame(SSE, SSR, SST)
# Print the table
paged_table(table)
error_sd <- sqrt(SSE / (nrow(main_data) - 5))
print(error_sd)
library(dplyr)
library(tidyr)
library(rmarkdown)
library(ggplot2)
old_data <- read.csv("usa.csv")
paged_table(old_data) # thay thế cho print, in ra bảng đẹp hơn
new_data <- old_data %>% select(3:14)
paged_table(new_data)
main_data <- subset(new_data , select = c(new_deaths , new_cases , new_tests, hosp_patients , positive_rate))
# paged_table(main_data)
main_data %>% sapply(function(col) sum(is.na(col)))    #Số dữ liệu bị khuyết theo cột
apply(main_data, 2, function(x)sum(is.na(x))/length(x))    #Tỉ lệ dữ liệu bị khuyết
main_data <- na.omit(main_data)
# main_data[is.na(main_data)] <- 0    #NA <- 0
paged_table(main_data)
stat_table<-apply(main_data[,c("new_deaths", "new_cases", "new_tests", "hosp_patients", "positive_rate")], 2,
function(x){c(mean(x), median(x), sd(x), min(x), max(x))})
rownames(stat_table)<-c("mean", "median", "sd", "min", "max")
paged_table(as.data.frame(stat_table))
plot_hist_norm <- function(data, var) {
# Calculate the variable to plot
plot_var <- data[[var]]
par(mfrow = c(1, 2))
# Histogram of the variable
# Normal curve overlay
hist(plot_var, main = paste0(var), xlab = "x",
col = "blue", border = "white", breaks = 20, freq = FALSE)
hist(log(plot_var), main = paste0("Log(", var, ")"), xlab = "ln(x)",
col = "blue", border = "white", breaks = 20, freq = FALSE)
curve(dnorm(x, mean = mean(log(plot_var)), sd = sd(log(plot_var))),
col = "red", lwd = 2, add = TRUE)
}
for (col_name in colnames(main_data)) {
# Call plot_hist_norm on each column
plot_hist_norm(main_data, col_name)
}
# Apply log data transformation to all variables
for (col_name in colnames(main_data)) {
main_data[[col_name]] <- log(main_data[[col_name]])
}
stat_table<-apply(main_data[,c("new_deaths", "new_cases", "new_tests", "hosp_patients", "positive_rate")], 2,
function(x){c(mean(x), median(x), sd(x), min(x), max(x))})
rownames(stat_table)<-c("mean", "median", "sd", "min", "max")
paged_table(as.data.frame(stat_table))
paged_table(as.data.frame(cor(main_data)))
contTab = subset(main_data, select = colnames(main_data))
pairs(contTab)
model <- lm(new_deaths ~ new_cases + new_tests + hosp_patients + positive_rate,
data = main_data)
summary(model)
# In ra cac he so cua mo hinh
paged_table(as.data.frame(t(model$coefficients)))
SSE <- (model$residuals ^ 2) %>% sum()
SSR <- ((model$fitted.values - mean(main_data$new_deaths)) ^ 2) %>% sum()
SST <- ((main_data$new_deaths - mean(main_data$new_deaths)) ^ 2) %>% sum()
table <- data.frame(SSE, SSR, SST)
# Print the table
paged_table(table)
error_sd <- sqrt(SSE / (nrow(main_data) - 5))
print(error_sd)
R2 <- SSR / SST
print(paste0("R^2 = ", R2))
R2_adjusted <- 1 - (nrow(main_data) - 1)/(nrow(main_data) - 5)*(1-R2)
print(paste0("Adjusted R^2 = ", R2_adjusted))
model <- lm(new_deaths ~ new_cases + new_tests + hosp_patients + positive_rate,
data = main_data)
summary(model)
# In ra cac he so cua mo hinh
paged_table(as.data.frame(t(model$coefficients)))
model <- lm(new_deaths ~ new_cases + new_tests + hosp_patients + positive_rate,
data = main_data)
summary(model)
# In ra cac he so cua mo hinh
paged_table(as.data.frame(model$coefficients))
model <- lm(new_deaths ~ new_cases + new_tests + hosp_patients + positive_rate,
data = main_data)
summary(model)
# In ra cac he so cua mo hinh
#paged_table(as.data.frame(t(model$coefficients)))
coef(model)
SSE <- (model$residuals ^ 2) %>% sum()
library(dplyr)
library(tidyr)
library(rmarkdown)
library(ggplot2)
old_data <- read.csv("usa.csv")
paged_table(old_data) # thay thế cho print, in ra bảng đẹp hơn
new_data <- old_data %>% select(3:14)
paged_table(new_data)
main_data <- subset(new_data , select = c(new_deaths , new_cases , new_tests, hosp_patients , positive_rate))
# paged_table(main_data)
main_data %>% sapply(function(col) sum(is.na(col)))    #Số dữ liệu bị khuyết theo cột
apply(main_data, 2, function(x)sum(is.na(x))/length(x))    #Tỉ lệ dữ liệu bị khuyết
main_data <- na.omit(main_data)
# main_data[is.na(main_data)] <- 0    #NA <- 0
paged_table(main_data)
stat_table<-apply(main_data[,c("new_deaths", "new_cases", "new_tests", "hosp_patients", "positive_rate")], 2,
function(x){c(mean(x), median(x), sd(x), min(x), max(x))})
rownames(stat_table)<-c("mean", "median", "sd", "min", "max")
paged_table(as.data.frame(stat_table))
plot_hist_norm <- function(data, var) {
# Calculate the variable to plot
plot_var <- data[[var]]
par(mfrow = c(1, 2))
# Histogram of the variable
# Normal curve overlay
hist(plot_var, main = paste0(var), xlab = "x",
col = "blue", border = "white", breaks = 20, freq = FALSE)
hist(log(plot_var), main = paste0("Log(", var, ")"), xlab = "ln(x)",
col = "blue", border = "white", breaks = 20, freq = FALSE)
curve(dnorm(x, mean = mean(log(plot_var)), sd = sd(log(plot_var))),
col = "red", lwd = 2, add = TRUE)
}
for (col_name in colnames(main_data)) {
# Call plot_hist_norm on each column
plot_hist_norm(main_data, col_name)
}
# Apply log data transformation to all variables
for (col_name in colnames(main_data)) {
main_data[[col_name]] <- log(main_data[[col_name]])
}
stat_table<-apply(main_data[,c("new_deaths", "new_cases", "new_tests", "hosp_patients", "positive_rate")], 2,
function(x){c(mean(x), median(x), sd(x), min(x), max(x))})
rownames(stat_table)<-c("mean", "median", "sd", "min", "max")
paged_table(as.data.frame(stat_table))
paged_table(as.data.frame(cor(main_data)))
contTab = subset(main_data, select = colnames(main_data))
pairs(contTab)
model <- lm(new_deaths ~ new_cases + new_tests + hosp_patients + positive_rate,
data = main_data)
summary(model)
# In ra cac he so cua mo hinh
#paged_table(as.data.frame(t(model$coefficients)))
coef(model)
SSE <- (model$residuals ^ 2) %>% sum()
SSR <- ((model$fitted.values - mean(main_data$new_deaths)) ^ 2) %>% sum()
SST <- ((main_data$new_deaths - mean(main_data$new_deaths)) ^ 2) %>% sum()
table <- data.frame(SSE, SSR, SST)
# Print the table
paged_table(table)
error_sd <- sqrt(SSE / (nrow(main_data) - 5))
print(error_sd)
R2 <- SSR / SST
print(paste0("R^2 = ", R2))
R2_adjusted <- 1 - (nrow(main_data) - 1)/(nrow(main_data) - 5)*(1-R2)
print(paste0("Adjusted R^2 = ", R2_adjusted))
model <- lm(new_deaths ~ new_cases + new_tests + hosp_patients + positive_rate,
data = main_data)
summary(model)
# In ra cac he so cua mo hinh
paged_table(as.data.frame(t(model$coefficients)))
SSE <- (model$residuals ^ 2) %>% sum()
SSR <- ((model$fitted.values - mean(main_data$new_deaths)) ^ 2) %>% sum()
SST <- ((main_data$new_deaths - mean(main_data$new_deaths)) ^ 2) %>% sum()
table <- data.frame(SSE, SSR, SST)
# Print the table
paged_table(table)
confint(model , level = 0.95)
se <- sqrt(diag(vcov(model)))
se <- sqrt(diag(vcov(model)))
print(se)
pred <- data.frame(new_cases=c(704:707), new_tests=c(704:707), hosp_patients=c(704:707), positive_ratec(704:707))
pred <- data.frame(new_cases=c(704:707), new_tests=c(704:707), hosp_patients=c(704:707), positive_rate = c(704:707))
predict(model, pred , interval = 'confidence')
pred <- data.frame(new_cases=c(704:707), new_tests=c(704:707), hosp_patients=c(704:707), positive_rate = c(704:707))
predict(model, pred , interval = 'confidence' , level = 0.95)
new <- data.frame(new_cases=c(704:707), new_tests=c(704:707), hosp_patients=c(704:707), positive_rate = c(704:707))
pred <- predict(model, new , interval = 'confidence')
confint(model)
new <- data.frame(new_cases=c(704:707), new_tests=c(704:707), hosp_patients=c(704:707), positive_rate = c(704:707))
pred <- predict(model, new , interval = 'confidence')
confint(pred)
new <- data.frame(new_cases=c(704:707), new_tests=c(704:707), hosp_patients=c(704:707), positive_rate = c(704:707))
pred <- predict(model, new , interval = 'confidence')
new <- data.frame(new_cases=c(704:707), new_tests=c(704:707), hosp_patients=c(704:707), positive_rate = c(704:707))
pred <- predict(model, new , interval = 'confidence')
new <- data.frame(new_cases=c(704:707), new_tests=c(704:707), hosp_patients=c(704:707), positive_rate = c(704:707))
predict(model, new , interval = 'confidence')
library(dplyr)
library(tidyr)
library(rmarkdown)
library(ggplot2)
old_data <- read.csv("usa.csv")
paged_table(old_data) # thay thế cho print, in ra bảng đẹp hơn
new_data <- old_data %>% select(3:14)
paged_table(new_data)
main_data <- subset(new_data , select = c(new_deaths , new_cases , new_tests, hosp_patients , positive_rate))
# paged_table(main_data)
main_data %>% sapply(function(col) sum(is.na(col)))    #Số dữ liệu bị khuyết theo cột
apply(main_data, 2, function(x)sum(is.na(x))/length(x))    #Tỉ lệ dữ liệu bị khuyết
main_data <- na.omit(main_data)
# main_data[is.na(main_data)] <- 0    #NA <- 0
paged_table(main_data)
stat_table<-apply(main_data[,c("new_deaths", "new_cases", "new_tests", "hosp_patients", "positive_rate")], 2,
function(x){c(mean(x), median(x), sd(x), min(x), max(x))})
rownames(stat_table)<-c("mean", "median", "sd", "min", "max")
paged_table(as.data.frame(stat_table))
plot_hist_norm <- function(data, var) {
# Calculate the variable to plot
plot_var <- data[[var]]
par(mfrow = c(1, 2))
# Histogram of the variable
# Normal curve overlay
hist(plot_var, main = paste0(var), xlab = "x",
col = "blue", border = "white", breaks = 20, freq = FALSE)
hist(log(plot_var), main = paste0("Log(", var, ")"), xlab = "ln(x)",
col = "blue", border = "white", breaks = 20, freq = FALSE)
curve(dnorm(x, mean = mean(log(plot_var)), sd = sd(log(plot_var))),
col = "red", lwd = 2, add = TRUE)
}
for (col_name in colnames(main_data)) {
# Call plot_hist_norm on each column
plot_hist_norm(main_data, col_name)
}
# Apply log data transformation to all variables
for (col_name in colnames(main_data)) {
main_data[[col_name]] <- log(main_data[[col_name]])
}
stat_table<-apply(main_data[,c("new_deaths", "new_cases", "new_tests", "hosp_patients", "positive_rate")], 2,
function(x){c(mean(x), median(x), sd(x), min(x), max(x))})
rownames(stat_table)<-c("mean", "median", "sd", "min", "max")
paged_table(as.data.frame(stat_table))
paged_table(as.data.frame(cor(main_data)))
contTab = subset(main_data, select = colnames(main_data))
pairs(contTab)
model <- lm(new_deaths ~ new_cases + new_tests + hosp_patients + positive_rate,
data = main_data)
summary(model)
# In ra cac he so cua mo hinh
paged_table(as.data.frame(t(model$coefficients)))
SSE <- (model$residuals ^ 2) %>% sum()
SSR <- ((model$fitted.values - mean(main_data$new_deaths)) ^ 2) %>% sum()
SST <- ((main_data$new_deaths - mean(main_data$new_deaths)) ^ 2) %>% sum()
table <- data.frame(SSE, SSR, SST)
# Print the table
paged_table(table)
error_sd <- sqrt(SSE / (nrow(main_data) - 5))
print(error_sd)
R2 <- SSR / SST
print(paste0("R^2 = ", R2))
R2_adjusted <- 1 - (nrow(main_data) - 1)/(nrow(main_data) - 5)*(1-R2)
print(paste0("Adjusted R^2 = ", R2_adjusted))
confint(model , level = 0.95)
new <- data.frame(new_cases=c(704:707), new_tests=c(704:707), hosp_patients=c(704:707), positive_rate = c(704:707))
predict(model, new , interval = 'confidence')
se <- sqrt(diag(vcov(model)))
print(se)
new <- data.frame(new_cases=c(704:707), new_tests=c(704:707), hosp_patients=c(704:707), positive_rate = c(704:707))
predict(model, new)
new <- data.frame(new_cases=c(704:707), new_tests=c(704:707), hosp_patients=c(704:707), positive_rate = c(704:707))
predict(model, new , interval = 'confidence')
pred <- data.frame(new_cases=c(704:707), new_tests=c(704:707), hosp_patients=c(704:707), positive_rate = c(704:707))
predict(model, pred , interval = 'confidence')
